ÿ
¡c:\dev\gft_projects\atena_dotnet\dotnet-sample\sample-component-v2\src\Projects\Core\Gft.Sample\Costumer.MS\Costumer.Infraestructure\Automapper\AddressProfile.cs
	namespace 	
Costumer
 
. 
Infraestructure "
." #

Automapper# -
;- .
public 
class 
AddressProfile 
: 
Profile %
{ 
public		 

AddressProfile		 
(		 
)		 
{

 
	CreateMap 
< 

AddressDto 
, 
Address %
>% &
(& '
)' (
.( )

ReverseMap) 3
(3 4
)4 5
;5 6
} 
} å
¢c:\dev\gft_projects\atena_dotnet\dotnet-sample\sample-component-v2\src\Projects\Core\Gft.Sample\Costumer.MS\Costumer.Infraestructure\Automapper\CostumerProfile.cs
	namespace 	
Costumer
 
. 
Infraestructure "
." #

Automapper# -
;- .
public 
class 
CostumerProfile 
: 
Profile &
{ 
public		 

CostumerProfile		 
(		 
)		 
{

 
	CreateMap 
< 
	PersonDto 
, 
Person #
># $
($ %
)% &
.& '

ReverseMap' 1
(1 2
)2 3
;3 4
	CreateMap 
< 
ListPersonDto 
,  
Person! '
>' (
(( )
)) *
.* +

ReverseMap+ 5
(5 6
)6 7
;7 8
} 
} …

žc:\dev\gft_projects\atena_dotnet\dotnet-sample\sample-component-v2\src\Projects\Core\Gft.Sample\Costumer.MS\Costumer.Infraestructure\Common\IBaseRepository.cs
	namespace 	
Costumer
 
. 
Domain 
. 
Common  
;  !
public 
	interface 
IBaseRepository  
<  !
T! "
>" #
{ 
Task 
< 	
IEnumerable	 
< 
T 
> 
> 
FindAll  
(  !
)! "
;" #

IQueryable 
< 
T 
> 
FindByCondition !
(! "

Expression" ,
<, -
Func- 1
<1 2
T2 3
,3 4
bool5 9
>9 :
>: ;

expression< F
)F G
;G H
Task		 
Create			 
(		 
T		 
entity		 
)		 
;		 
Task

 
Update

	 
(

 
T

 
entity

 
)

 
;

 
Task 
Delete	 
( 
T 
entity 
) 
; 
} À

¥c:\dev\gft_projects\atena_dotnet\dotnet-sample\sample-component-v2\src\Projects\Core\Gft.Sample\Costumer.MS\Costumer.Infraestructure\DataContext\CostumerDbContext.cs
	namespace 	
Costumer
 
. 
Infraestructure "
." #
DataContext# .
;. /
public 
class 
CostumerDbContext 
:  
	DbContext! *
{ 
public		 

DbSet		 
<		 
Person		 
>		 
Person		 
{		  !
get		" %
;		% &
set		' *
;		* +
}		, -
public

 

CostumerDbContext

 
(

 
DbContextOptions

 -
<

- .
CostumerDbContext

. ?
>

? @
options

A H
)

H I
:

J K
base

L P
(

P Q
options

Q X
)

X Y
{

Z [
}

\ ]
	protected 
override 
void 
OnModelCreating +
(+ ,
ModelBuilder, 8
modelBuilder9 E
)E F
{ 
modelBuilder 
. 
ApplyConfiguration '
(' (
new( +
	PersonMap, 5
(5 6
)6 7
)7 8
;8 9
} 
} ï
¦c:\dev\gft_projects\atena_dotnet\dotnet-sample\sample-component-v2\src\Projects\Core\Gft.Sample\Costumer.MS\Costumer.Infraestructure\Interfaces\ICostumerRepository.cs
	namespace 	
Costumer
 
. 
Domain 
. 

Interfaces $
;$ %
public 
	interface 
ICostumerRepository $
:% &
IBaseRepository' 6
<6 7
Person7 =
>= >
{ 
} ð
–c:\dev\gft_projects\atena_dotnet\dotnet-sample\sample-component-v2\src\Projects\Core\Gft.Sample\Costumer.MS\Costumer.Infraestructure\Maps\PersonMap.cs
	namespace 	
Costumer
 
. 
Infraestructure "
." #
Maps# '
;' (
public 
class 
	PersonMap 
: $
IEntityTypeConfiguration 1
<1 2
Person2 8
>8 9
{ 
public		 

void		 
	Configure		 
(		 
EntityTypeBuilder		 +
<		+ ,
Person		, 2
>		2 3
builder		4 ;
)		; <
{

 
builder 
. 
ToTable 
( 
$str !
)! "
;" #
builder 
. 
HasKey 
( 
p 
=> 
p 
. 
Id  
)  !
;! "
builder 
. 
Property 
( 
p 
=> 
p 
.  
Name  $
)$ %
;% &
builder 
. 
Property 
( 
p 
=> 
p 
.  
Email  %
)% &
;& '
builder 
. 
OwnsOne 
( 
a 
=> 
a 
. 
Address &
,& '
b 
=> 
{ 
b 
. 
Property 
( 
a 
=> 
a  !
.! "
City" &
)& '
;' (
b 
. 
Property 
( 
a 
=> 
a  !
.! "
Country" )
)) *
;* +
b 
. 
Property 
( 
a 
=> 
a  !
.! "
State" '
)' (
;( )
b 
. 
Property 
( 
a 
=> 
a  !
.! "
Street" (
)( )
;) *
b 
. 
Property 
( 
a 
=> 
a  !
.! "
ZipCode" )
)) *
;* +
b 
. 
Property 
( 
a 
=> 
a  !
.! "
Neighborhood" .
). /
;/ 0
b 
. 
Property 
( 
a 
=> 
a  !
.! "
Number" (
)( )
;) *
b 
. 
Property 
( 
a 
=> 
a  !
.! "

Complement" ,
), -
;- .
} 
) 
; 
builder 
. 

Navigation 
( 
e 
=> 
e  !
.! "
Address" )
)) *
.* +

IsRequired+ 5
(5 6
)6 7
;7 8
} 
} ß6
©c:\dev\gft_projects\atena_dotnet\dotnet-sample\sample-component-v2\src\Projects\Core\Gft.Sample\Costumer.MS\Costumer.Infraestructure\Migrations\20220912170829_Initial.cs
	namespace 	
Costumer
 
. 
Infraestructure "
." #

Migrations# -
{ 
public		 

partial		 
class		 
Initial		  
:		! "
	Migration		# ,
{

 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 
AlterDatabase *
(* +
)+ ,
. 

Annotation 
( 
$str +
,+ ,
$str- 6
)6 7
;7 8
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str 
,  
columns 
: 
table 
=> !
new" %
{ 
Id 
= 
table 
. 
Column %
<% &
long& *
>* +
(+ ,
type, 0
:0 1
$str2 :
,: ;
nullable< D
:D E
falseF K
)K L
. 

Annotation #
(# $
$str$ C
,C D(
MySqlValueGenerationStrategyE a
.a b
IdentityColumnb p
)p q
,q r
Name 
= 
table  
.  !
Column! '
<' (
string( .
>. /
(/ 0
type0 4
:4 5
$str6 @
,@ A
nullableB J
:J K
trueL P
)P Q
. 

Annotation #
(# $
$str$ 3
,3 4
$str5 >
)> ?
,? @
	Birthdate 
= 
table  %
.% &
Column& ,
<, -
DateTime- 5
>5 6
(6 7
type7 ;
:; <
$str= J
,J K
nullableL T
:T U
falseV [
)[ \
,\ ]
Email 
= 
table !
.! "
Column" (
<( )
string) /
>/ 0
(0 1
type1 5
:5 6
$str7 A
,A B
nullableC K
:K L
trueM Q
)Q R
. 

Annotation #
(# $
$str$ 3
,3 4
$str5 >
)> ?
,? @
Address_Street "
=# $
table% *
.* +
Column+ 1
<1 2
string2 8
>8 9
(9 :
type: >
:> ?
$str@ J
,J K
nullableL T
:T U
trueV Z
)Z [
. 

Annotation #
(# $
$str$ 3
,3 4
$str5 >
)> ?
,? @
Address_City  
=! "
table# (
.( )
Column) /
</ 0
string0 6
>6 7
(7 8
type8 <
:< =
$str> H
,H I
nullableJ R
:R S
trueT X
)X Y
. 

Annotation #
(# $
$str$ 3
,3 4
$str5 >
)> ?
,? @
Address_State !
=" #
table$ )
.) *
Column* 0
<0 1
string1 7
>7 8
(8 9
type9 =
:= >
$str? I
,I J
nullableK S
:S T
trueU Y
)Y Z
.   

Annotation   #
(  # $
$str  $ 3
,  3 4
$str  5 >
)  > ?
,  ? @
Address_Country!! #
=!!$ %
table!!& +
.!!+ ,
Column!!, 2
<!!2 3
string!!3 9
>!!9 :
(!!: ;
type!!; ?
:!!? @
$str!!A K
,!!K L
nullable!!M U
:!!U V
true!!W [
)!![ \
."" 

Annotation"" #
(""# $
$str""$ 3
,""3 4
$str""5 >
)""> ?
,""? @
Address_ZipCode## #
=##$ %
table##& +
.##+ ,
Column##, 2
<##2 3
string##3 9
>##9 :
(##: ;
type##; ?
:##? @
$str##A K
,##K L
nullable##M U
:##U V
true##W [
)##[ \
.$$ 

Annotation$$ #
($$# $
$str$$$ 3
,$$3 4
$str$$5 >
)$$> ?
,$$? @ 
Address_Neighborhood%% (
=%%) *
table%%+ 0
.%%0 1
Column%%1 7
<%%7 8
string%%8 >
>%%> ?
(%%? @
type%%@ D
:%%D E
$str%%F P
,%%P Q
nullable%%R Z
:%%Z [
true%%\ `
)%%` a
.&& 

Annotation&& #
(&&# $
$str&&$ 3
,&&3 4
$str&&5 >
)&&> ?
,&&? @
Address_Number'' "
=''# $
table''% *
.''* +
Column''+ 1
<''1 2
int''2 5
>''5 6
(''6 7
type''7 ;
:''; <
$str''= B
,''B C
nullable''D L
:''L M
false''N S
)''S T
,''T U
Address_Complement(( &
=((' (
table(() .
.((. /
Column((/ 5
<((5 6
string((6 <
>((< =
(((= >
type((> B
:((B C
$str((D N
,((N O
nullable((P X
:((X Y
true((Z ^
)((^ _
.)) 

Annotation)) #
())# $
$str))$ 3
,))3 4
$str))5 >
)))> ?
}** 
,** 
constraints++ 
:++ 
table++ "
=>++# %
{,, 
table-- 
.-- 

PrimaryKey-- $
(--$ %
$str--% 1
,--1 2
x--3 4
=>--5 7
x--8 9
.--9 :
Id--: <
)--< =
;--= >
}.. 
).. 
.// 

Annotation// 
(// 
$str// +
,//+ ,
$str//- 6
)//6 7
;//7 8
}00 	
	protected22 
override22 
void22 
Down22  $
(22$ %
MigrationBuilder22% 5
migrationBuilder226 F
)22F G
{33 	
migrationBuilder44 
.44 
	DropTable44 &
(44& '
name55 
:55 
$str55 
)55  
;55  !
}66 	
}77 
}88 í
§c:\dev\gft_projects\atena_dotnet\dotnet-sample\sample-component-v2\src\Projects\Core\Gft.Sample\Costumer.MS\Costumer.Infraestructure\Repositories\CostumerRepository.cs
	namespace 	
Costumer
 
. 
Infraestructure "
." #
Repositories# /
;/ 0
public		 
class		 
CostumerRepository		 
:		  !
ICostumerRepository		" 5
{

 
private 
readonly 
CostumerDbContext &
_context' /
;/ 0
public 

CostumerRepository 
( 
CostumerDbContext /
context0 7
)7 8
{ 
_context 
= 
context 
; 
} 
public 

async 
Task 
< 
IEnumerable !
<! "
Person" (
>( )
>) *
FindAll+ 2
(2 3
)3 4
{ 

IQueryable 
< 
Person 
> 
query  
=! "
_context# +
.+ ,
Set, /
</ 0
Person0 6
>6 7
(7 8
)8 9
;9 :
return 
await 
query 
. 
AsNoTracking '
(' (
)( )
.) *
ToListAsync* 5
(5 6
)6 7
;7 8
} 
public 


IQueryable 
< 
Person 
> 
FindByCondition -
(- .

Expression. 8
<8 9
Func9 =
<= >
Person> D
,D E
boolF J
>J K
>K L

expressionM W
)W X
=> 
_context 
. 
Set 
< 
Person 
> 
( 
) 
. 
Where #
(# $

expression$ .
). /
./ 0
AsNoTracking0 <
(< =
)= >
;> ?
public 

async 
Task 
Create 
( 
Person #
entity$ *
)* +
{ 
await 
_context 
. 
Set 
< 
Person !
>! "
(" #
)# $
.$ %
AddAsync% -
(- .
entity. 4
)4 5
;5 6
await 
_context 
. 
SaveChangesAsync '
(' (
)( )
;) *
} 
public 

async 
Task 
Update 
( 
Person #
entity$ *
)* +
{   
_context!! 
.!! 
Set!! 
<!! 
Person!! 
>!! 
(!! 
)!! 
.!! 
Update!! %
(!!% &
entity!!& ,
)!!, -
;!!- .
await"" 
_context"" 
."" 
SaveChangesAsync"" '
(""' (
)""( )
;"") *
}## 
public$$ 

async$$ 
Task$$ 
Delete$$ 
($$ 
Person$$ #
entity$$$ *
)$$* +
{%% 
_context&& 
.&& 
Set&& 
<&& 
Person&& 
>&& 
(&& 
)&& 
.&& 
Remove&& %
(&&% &
entity&&& ,
)&&, -
;&&- .
await'' 
_context'' 
.'' 
SaveChangesAsync'' '
(''' (
)''( )
;'') *
}(( 
})) ¦
±c:\dev\gft_projects\atena_dotnet\dotnet-sample\sample-component-v2\src\Projects\Core\Gft.Sample\Costumer.MS\Costumer.Infraestructure\Repositories\RepositoryCostumerExtensions.cs
	namespace 	
Costumer
 
. 
Infraestructure "
." #
Repositories# /
;/ 0
public 
static 
class (
RepositoryCostumerExtensions 0
{ 
public		 

static		 

IQueryable		 
<		 
Person		 #
>		# $
FilterCostumer		% 3
(		3 4
this		4 8

IQueryable		9 C
<		C D
Person		D J
>		J K
costumer

< D
,

D E
uint

F J
maxId

K P
,

P Q
uint

R V
minId

W \
)

\ ]
=>

^ `
costumer@ H
.H I
WhereI N
(N O
eO P
=>Q S
eT U
.U V
IdV X
>=Y [
maxId\ a
&&b d
ee f
.f g
Idg i
<=j l
minIdm r
)r s
;s t
public 

static 

IQueryable 
< 
Person #
># $
Search% +
(+ ,
this, 0

IQueryable1 ;
<; <
Person< B
>B C
costumerD L
,L M
string4 :

searchTerm; E
)E F
{ 
if 

( 
string 
. 
IsNullOrWhiteSpace %
(% &

searchTerm& 0
)0 1
)1 2
return 
costumer 
; 
var 
lowerCaseTerm 
= 

searchTerm &
.& '
Trim' +
(+ ,
), -
.- .
ToLower. 5
(5 6
)6 7
;7 8
return 
costumer 
. 
Where 
( 
e 
=>  "
e# $
.$ %
Name% )
.) *
ToLower* 1
(1 2
)2 3
.3 4
Contains4 <
(< =
lowerCaseTerm= J
)J K
)K L
;L M
} 
} 