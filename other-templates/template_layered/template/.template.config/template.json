{
    "$schema": "http://json.schemastore.org/template",
    "author": "Engineering team",
    "classifications": ["Web", "ASP.NET", "cleancode", "Clean Architecture"],
    "identity": "GFT.Custom.Template.DDD",
    "name": "GFT Custom template WebAPI",
    "description": "This project aims to provide to final user a ddd webapi template using cleancode architecture, this project has no dependencies from core application.",
    "shortName": "atena-ddd",
    "defaultName": "Template",
    "tags": {
        "language": "C#",
        "type": "project"
    },
    "sourceName": "Template",
    "preferNameDirectory": true,
    "symbols": {
        "EnableSwaggerSupport": {
            "type": "parameter",
            "description": "Enables swagger support and configurations file",
            "datatype": "bool",
            "defaultValue": "true"
        },
        "Dockerfile": {
            "type": "parameter",
            "description": "Add dockerfile.",
            "datatype": "bool",
            "defaultValue": "true"
        },
        "DockerCompose": {
            "type": "parameter",
            "description": "Add dockercompose configuration.",
            "datatype": "bool",
            "defaultValue": "false"
        },
        "IncludeSolutionFile": {
            "type": "parameter",
            "description": "Add solution file",
            "datatype": "bool",
            "defaultValue": "false"
        },
        "IncludeTestsXUnit": {
            "type": "parameter",
            "description": "Add XUnit tests",
            "datatype": "bool",
            "defaultValue": "true"
        }
    },
    "sources": [
        {
            "modifiers": [
                {
                    "condition": "(!EnableSwaggerSupport)",
                    "exclude": [
                        "Template/Template.Presentation/Extensions/SwaggerConfiguration.cs"
                    ]
                },
                {
                    "condition": "(!Dockerfile)",
                    "exclude": ["Template/Template.Presentation/Dockerfile"]
                },
                {
                    "condition": "(!DockerCompose)",
                    "exclude": [
                        "/docker-compose.dcproj",
                        "/docker-compose.override.yml",
                        "/docker-compose.yml"
                    ]
                },
                {
                    "condition": "(!IncludeSolutionFile)",
                    "exclude": ["Template/Template.sln"]
                },
                {
                    "condition": "(!IncludeTestsXUnit)",
                    "exclude": ["Template/Template.Tests/**/*"]
                }
            ],
            "source": "./",
            "target": "./",
            "exclude": [
                "README.md",
                "**/[Bb]in/**",
                "**/[Oo]bj/**",
                ".template.config/**/*",
                ".vs/**/*",
                "**/*.filelist",
                "**/*.user",
                "**/*.lock.json",
                "**/.git/**",
                "*.nuspec"
            ]
        }
    ]
}
